Preferiblemente hacer todo el proceso desde cmder
##
Configurar CMDER en visual studio code
Ingresar la siguientes lineas en settings de terminal en visual studio, verificar el directorio del bat de cmder
-----------------------------------------    
"terminal.integrated.profiles.windows": {
        "Cmder": {
          "path": "${env:windir}\\System32\\cmd.exe",
          "args": ["/k", "C:\\cmder\\vsc.bat"]
        }
      },
      "terminal.integrated.defaultProfile.windows": "Cmder",
-----------------------------------------    
##

- Crear la carpeta donde se va a hacer el entorno virtual
- Ingresar en la carpeta
- Ejecutar py -m venv #nombreDelEntornoVirtual
- luego de creada la carpeta ingresar en la carpeta del entorno virtual y scripts
- Ejecutar el script Activate.bat (A partir de esta ejecucion estamos trabajando en el entorno virtual)
- Nos regresamos a la carpeta principal de la aplicacion
- Ingresar a visual studio Code code -r .
- Instalar Python microsoft si es necesario
- Instalar pip install pylint desde el cmder
- Instalar manejador de postgres psycopg2, pip install psycopg2
- Instalamos DJANGO pip install django

Creacion del Proyecto
- En la carpeta del entorno virtual de la aplicacion ejecutamos django-admin.exe startproject #nombreProyecto
- Ingresamos en la carpeta con el #nombreProyecto
- Abrimos visual studio code -r .
- Seleccionar el intepreter Python del entorno Virtual control+shift+p python: select interpreter
- Abrir el archivo settings.py para hacer las primeras configuraciones:
	- En la opcion DATABASE ingresar los parametros para trabajar con base de datos postgres:
		'ENGINE': 'django.db.backends.postgresql_psycopg2'
		'NAME': '#nombre de base datos',
		'HOST': '127.0.0.1',#segun corresponda
		'USER': 'admin',#segun corresponda
		'PASSWORD':'admin', #segun corresponda
		'PORT': 5432 #SEGUN CORRESPONDA
- Cambiar el language code a como corresponda por ejemplo 'es-ni'
- Cambiar time_zone a lo que corresponda ejemplo 'America/Bogota'
- Guardar cambios de Settings
- Probar conexion con base de datos ejecutamos manage.py dbshell
- Para ejecutar el servidor manage.py runserver (sin parametros) "manage.py runserver #ip:#puerto (con parametros)"
- Ejecutar manage.py migrate
- Verificar que la migracion fue realizada manage.py showmigrations

GitHub
- En el entorno virtual desde la carpeta de la aplicacion ejecutar git init
- Ingresar en gitignore.io y poner visual studio code y python Crear
- En la carpeta app en visual studio crear un archivo .gitignore y copiar la informacion de la pagina
- Subir a github, primero crear el repositorio y ejecutar:
	- git init
	- git add README.md
	- git commit -m "first commit"
	- git branch -M main
	- git remote add origin https://github.com/neon48/SistemaCompras.git
	- git push -u origin main

